<!doctype html>
<html lang="en">
  <head>
    <title>Nodejs SSE</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="color-scheme" content="light dark" />
    <link rel="icon" href="/favicon.ico" type="image/ico" />
    <!-- stylesheets -->
    <link rel="stylesheet" href="/modules/@picocss/pico/css/pico.min.css" />
    <link
      rel="stylesheet"
      href="/modules/@picocss/pico/css/pico.colors.min.css"
    />
    <style>
      footer {
        text-align: center;
      }
      footer > p {
        margin: 0;
      }
    </style>
  </head>
  <body>
    <header class="container">
      <h2>NodeJs SSE implementation in a Distributed System</h2>
    </header>
    <main class="container">
      <p>Click the button to submit a request to the server.</p>

      <ul>
        <li>Client Id: client-1</li>
      </ul>

      <div class="grid">
        <div class="container">
          <p>Submit a request that will success eventually</p>
          <button id="submit-success-request">Submit Success</button>
        </div>
        <div class="container">
          <p>Submit a request that will fail eventually</p>
          <button id="submit-failure-request" class="secondary">
            Submit Failure
          </button>
        </div>
      </div>

      <br /><br />
      <article>
        <p>SSE response</p>
        <ul id="sse-responses"></ul>
      </article>
    </main>
    <footer class="pico-background-zinc-850">
      <p>
        Â© 2024
        <a href="https://www.chanalston.com" target="_blank"> Chan Alston </a>
      </p>
      <a
        rel="noopener noreferrer"
        target="_blank"
        referrerpolicy="no-referrer"
        href="https://github.com/AlstonChan/nodejs-sse-distributed-system"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-github"
        >
          <path
            d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
          />
          <path d="M9 18c-4.51 2-5-2-7-2" />
        </svg>
      </a>
    </footer>
  </body>
  <script>
    const submitSuccessRequestButton = document.getElementById(
      "submit-success-request"
    );
    const submitFailureRequestButton = document.getElementById(
      "submit-failure-request"
    );
    const sseResponses = document.getElementById("sse-responses");

    const evtSource = new EventSource("/sse?clientId=client-1");
    evtSource.onmessage = function (event) {
      const li = document.createElement("li");
      li.textContent = event.data;
      sseResponses.appendChild(li);
    };

    submitSuccessRequestButton.addEventListener("click", async () => {
      const response = await fetch("/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ foo: "bar", clientId: "client-1" }),
      });
    });

    submitFailureRequestButton.addEventListener("click", async () => {
      const response = await fetch("/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ foo: "boo", clientId: "client-1" }),
      });
    });
  </script>
</html>
